{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaquin\\\\Desktop\\\\projects\\\\pern\\\\pern-stack\\\\newproject\\\\src\\\\components\\\\AgregarT.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateProjectBox() {\n  _s();\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState(null);\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n  const handleImageChange = e => {\n    const selectedImage = e.target.files[0];\n    if (selectedImage) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setImage(reader.result);\n      };\n      reader.readAsDataURL(selectedImage);\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('longText', description);\n      formData.append('image', image);\n      console.log('FormData:', formData);\n      console.log('Description:', description);\n      console.log('Image:', image);\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Description and image sent successfully.');\n        console.log('Cloudinary URL:', data.url);\n        console.log('PostgreSQL Result:', data.postgresResult);\n        // Clear the description and image\n        setDescription('');\n        setImage(null);\n      } else {\n        console.error('Failed to send data to the server.');\n        // Handle the error accordingly\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n      // Handle the error accordingly\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-project-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        cols: \"50\",\n        placeholder: \"Project Description\",\n        value: description,\n        onChange: handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Project Preview\",\n      className: \"image-preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateProjectBox, \"ROOewrioBzQAagVPdfn2wjgX+2M=\");\n_c = CreateProjectBox;\nexport default CreateProjectBox;\nvar _c;\n$RefreshReg$(_c, \"CreateProjectBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateProjectBox","_s","description","setDescription","image","setImage","handleDescriptionChange","e","target","value","handleImageChange","selectedImage","files","reader","FileReader","onload","result","readAsDataURL","handleSubmit","formData","FormData","append","console","log","response","fetch","method","body","ok","data","json","url","postgresResult","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","placeholder","onChange","type","accept","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/joaquin/Desktop/projects/pern/pern-stack/newproject/src/components/AgregarT.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction CreateProjectBox() {\r\n  const [description, setDescription] = useState('');\r\n  const [image, setImage] = useState(null);\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const selectedImage = e.target.files[0];\r\n    if (selectedImage) {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        setImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(selectedImage);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('longText', description);\r\n      formData.append('image', image);\r\n\r\n      console.log('FormData:', formData);\r\n      console.log('Description:', description);\r\n      console.log('Image:', image);\r\n\r\n      const response = await fetch('http://localhost:5000/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Description and image sent successfully.');\r\n        console.log('Cloudinary URL:', data.url);\r\n        console.log('PostgreSQL Result:', data.postgresResult);\r\n        // Clear the description and image\r\n        setDescription('');\r\n        setImage(null);\r\n      } else {\r\n        console.error('Failed to send data to the server.');\r\n        // Handle the error accordingly\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n      // Handle the error accordingly\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-project-box\">\r\n      <h2>Create New Project</h2>\r\n      <div className=\"input-container\">\r\n        <textarea\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          placeholder=\"Project Description\"\r\n          value={description}\r\n          onChange={handleDescriptionChange}\r\n        />\r\n      </div>\r\n      <div className=\"input-container\">\r\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      </div>\r\n      {image && <img src={image} alt=\"Project Preview\" className=\"image-preview\" />}\r\n      <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateProjectBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}