{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joaquin\\\\Desktop\\\\projects\\\\pern\\\\pern-stack\\\\newproject\\\\src\\\\components\\\\projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectBox = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/proyectos'); // Update the endpoint to the correct one for fetching data from the 'proyectos' table\n        if (response.ok) {\n          const data = await response.json();\n          setProjects(data);\n        } else {\n          console.error('Failed to fetch projects.');\n        }\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#336699',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n      },\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-box\",\n        style: projectBoxStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#663366'\n          },\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#336699'\n          },\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.url,\n          alt: project.title,\n          style: imageStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectBox, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ProjectBox;\nconst projectBoxStyle = {\n  backgroundColor: '#F0F0F0',\n  padding: '20px',\n  margin: '10px',\n  border: '1px solid #336699',\n  borderRadius: '8px',\n  width: '300px' // Adjust the width as needed\n};\n\nconst imageStyle = {\n  maxWidth: '100%',\n  height: 'auto',\n  marginTop: '10px',\n  borderRadius: '8px'\n};\nexport default ProjectBox;\nvar _c;\n$RefreshReg$(_c, \"ProjectBox\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProjectBox","_s","projects","setProjects","fetchData","response","fetch","ok","data","json","console","error","style","textAlign","children","color","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","flexWrap","map","project","className","projectBoxStyle","title","description","src","url","alt","imageStyle","id","_c","backgroundColor","padding","margin","border","borderRadius","width","maxWidth","height","marginTop","$RefreshReg$"],"sources":["C:/Users/joaquin/Desktop/projects/pern/pern-stack/newproject/src/components/projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ProjectBox = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/proyectos'); // Update the endpoint to the correct one for fetching data from the 'proyectos' table\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setProjects(data);\r\n        } else {\r\n          console.error('Failed to fetch projects.');\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h2 style={{ color: '#336699', fontFamily: 'Arial, sans-serif' }}>Projects</h2>\r\n      <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n        {projects.map((project) => (\r\n          <div key={project.id} className=\"project-box\" style={projectBoxStyle}>\r\n            <h3 style={{ color: '#663366' }}>{project.title}</h3>\r\n            <p style={{ color: '#336699' }}>{project.description}</p>\r\n            <img src={project.url} alt={project.title} style={imageStyle} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst projectBoxStyle = {\r\n  backgroundColor: '#F0F0F0',\r\n  padding: '20px',\r\n  margin: '10px',\r\n  border: '1px solid #336699',\r\n  borderRadius: '8px',\r\n  width: '300px', // Adjust the width as needed\r\n};\r\n\r\nconst imageStyle = {\r\n  maxWidth: '100%',\r\n  height: 'auto',\r\n  marginTop: '10px',\r\n  borderRadius: '8px',\r\n};\r\n\r\nexport default ProjectBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC,CAAC,CAAC;QACrE,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,WAAW,CAACK,IAAI,CAAC;QACnB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;QAC5C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKa,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClCf,OAAA;MAAIa,KAAK,EAAE;QAAEG,KAAK,EAAE,SAAS;QAAEC,UAAU,EAAE;MAAoB,CAAE;MAAAF,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/ErB,OAAA;MAAKa,KAAK,EAAE;QAAES,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAT,QAAA,EACzEZ,QAAQ,CAACsB,GAAG,CAAEC,OAAO,iBACpB1B,OAAA;QAAsB2B,SAAS,EAAC,aAAa;QAACd,KAAK,EAAEe,eAAgB;QAAAb,QAAA,gBACnEf,OAAA;UAAIa,KAAK,EAAE;YAAEG,KAAK,EAAE;UAAU,CAAE;UAAAD,QAAA,EAAEW,OAAO,CAACG;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrDrB,OAAA;UAAGa,KAAK,EAAE;YAAEG,KAAK,EAAE;UAAU,CAAE;UAAAD,QAAA,EAAEW,OAAO,CAACI;QAAW;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDrB,OAAA;UAAK+B,GAAG,EAAEL,OAAO,CAACM,GAAI;UAACC,GAAG,EAAEP,OAAO,CAACG,KAAM;UAAChB,KAAK,EAAEqB;QAAW;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAHxDK,OAAO,CAACS,EAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAnCID,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AAqChB,MAAM2B,eAAe,GAAG;EACtBS,eAAe,EAAE,SAAS;EAC1BC,OAAO,EAAE,MAAM;EACfC,MAAM,EAAE,MAAM;EACdC,MAAM,EAAE,mBAAmB;EAC3BC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE,OAAO,CAAE;AAClB,CAAC;;AAED,MAAMR,UAAU,GAAG;EACjBS,QAAQ,EAAE,MAAM;EAChBC,MAAM,EAAE,MAAM;EACdC,SAAS,EAAE,MAAM;EACjBJ,YAAY,EAAE;AAChB,CAAC;AAED,eAAexC,UAAU;AAAC,IAAAmC,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}